version: '2.3'
services:
    config-server:
        container_name: config-server
        build:
            context: .
            dockerfile: atech-config-server/Dockerfile-atechconfigserver
        image: config-server-latest
        healthcheck: 
            test: curl -f http://localhost:8081/actuator/health
            interval: 20s
            timeout: 5s
            retries: 5            
        expose:
            - 8081
        ports:
            - 8081:8081
        networks:
            - emp-network
    
    discovery:
        container_name: server-register
        environment:
                  SPRING_APPLICATION_JSON: '{"spring":{"application":{"name": "atech-server-register"},"cloud":{"config":{"uri":"http://config-server:8081"}}}}'
        build:
            context: .
            dockerfile: atech-server-register/Dockerfile-atechserverregister
        image: server-register-latest        
        healthcheck: 
            test: curl -f http://localhost:8082/actuator/health
            interval: 20s
            timeout: 5s
            retries: 5   
        expose:
            - 8082
        ports:
            - 8082:8082
        networks:
            - emp-network        
        depends_on:
            config-server:
               condition: service_healthy  
        
        logging:
            driver: json-file  

    gateway:
        container_name: server-gateway
        environment:
                  SPRING_APPLICATION_JSON: '{"spring":{"application":{"name": "atech-api-gateway"},"cloud":{"config":{"uri":"http://config-server:8081"}}}}'
        build:
            context: .
            dockerfile: atech-api-gateway/Dockerfile-atechapigateway
        image: server-gateway-latest        
        healthcheck: 
            test: curl -f http://localhost:8079/actuator/health
            interval: 20s
            timeout: 5s
            retries: 5   
        expose:
            - 8079
        ports:
            - 8079:8079
        networks:
            - emp-network        
        depends_on:
            config-server:
               condition: service_healthy 
            discovery:
               condition: service_healthy                         
        
        logging:
            driver: json-file

    dbauth:        
        container_name: authserverdb
        environment:
                  POSTGRES_USER: atech
                  POSTGRES_PASSWORD: atech
                  POSTGRES_DB: authserverdb
        image: postgres:10.5-alpine
        
        expose:
            - 5442        
        ports:        
            - 5442:5432
        networks:
            - emp-network
        logging:
            driver: json-file  

    dbflight:        
        container_name: flightcontroldb
        environment:
                  POSTGRES_USER: atech
                  POSTGRES_PASSWORD: atech
                  POSTGRES_DB: flightcontroldb
        image: postgres:10.5-alpine 
        expose:
            - 5432       
        ports:
            - 5432:5432
        networks:
            - emp-network
        logging:
            driver: json-file             
           
    auth-server:
        container_name: auth-server
        environment:
                  SPRING_APPLICATION_JSON: '{"spring":{"application":{"name": "atech-auth-server"},"cloud":{"config":{"uri":"http://config-server:8081"}}}}'
                  SPRING_DATASOURCE_URL: jdbc:postgresql://dbauth:5432/authserverdb?createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true&useSSL=false&useTimezone=true&serverTimezone=UTC
                  SPRING_DATASOURCE_USERNAME: atech
                  SPRING_DATASOURCE_PASSWORD: atech
        build:
            context: .
            dockerfile: atech-auth-server/Dockerfile-atechauthserver
        image: auth-server-latest
        healthcheck: 
            test: curl -f http://localhost:8083/actuator/health
            interval: 20s
            timeout: 5s
            retries: 5   
        expose:
            - 8083
        ports:
            - 8083:8083
        networks:
            - emp-network        
        depends_on:
            config-server:
                condition: service_healthy
            discovery:
                condition: service_healthy 
            gateway:
                condition: service_healthy                                
                       
        logging:
            driver: json-file    

    flight-control:
        container_name: flight-control
        environment:
                  SPRING_APPLICATION_JSON: '{"spring":{"application":{"name": "atech-flight-control"},"cloud":{"config":{"uri":"http://config-server:8081"}}}}'
                  SPRING_DATASOURCE_URL: jdbc:postgresql://dbflight:5432/flightcontroldb?createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true&useSSL=false&useTimezone=true&serverTimezone=UTC
        build:
            context: .
            dockerfile: flight-control/Dockerfile-flightcontrol
        image: flight-control-latest
        expose:
            - 8080
        ports:
            - 8080:8080
        networks:
            - emp-network        
        depends_on:
            config-server:
                condition: service_healthy
            discovery:
                condition: service_healthy 
            gateway:
                condition: service_healthy   
        logging:
            driver: json-file                          
     
networks:
    emp-network:
        driver: bridge